<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chess Game</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<style>
    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
    @import url('https://fonts.googleapis.com/css2?family=Edu+NSW+ACT+Cursive:wght@600&display=swap');
    body {
        font-family: 'Roboto', sans-serif;
    }
    .board {
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        grid-template-rows: repeat(8, 1fr);
        width: 100%;
        height: 100%;
        z-index: 10;
        border-radius: 50%;
    }
    .square {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .light {
        background-color: rgb(164, 149, 174);
    }
    .dark {
        background-color: rgb(44, 0, 75);
    }
    .piece {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2em;
        cursor: grab;
    }
    .white {
        color: rgb(255, 254, 254);
    }
    .black {
        color: black;
    }
    .piece::before {
        content: attr(data-piece);
        font-size: 2em;
    }
    .piece.white::before {
        color: white;
    }
    #box{
        filter: blur(5px);
    }
    .title{
        font-family: 'Edu NSW ACT Cursive', cursive;
        font-size: 3rem;
        color: white;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }
    /* Responsive board sizing */
    @media (max-width: 1024px) {
        .board {
            width: 350px !important;
            height: 350px !important;
        }
        .responsive-bg {
            padding: 0 !important;
        }
    }
    @media (max-width: 640px) {
        .board {
            width: 95vw !important;
            height: 95vw !important;
            max-width: 350px !important;
            max-height: 350px !important;
        }
        .responsive-bg {
            padding: 0 !important;
        }
        .title {
            font-size: 2rem;
        }
    }
</style>
<body class="w-screen h-screen items-center justify-center">
    <main class="w-full h-full bg-cover flex flex-col lg:flex-row items-center justify-center text-white relative" style="background-image: url('/abc.jpg');">
        <aside class="w-full lg:max-w-[400px] h-auto lg:h-full bg-gradient-to-b from-indigo-950 to-black lg:absolute lg:left-0 flex flex-col justify-between items-center p-4 lg:p-8 z-20">
            <span class=" flex flex-row " ><span class="title">Chess_Cha</span><svg aria-hidden="true" data-prefix="fal" data-icon="chess-king-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512" class="svg-inline--fa fa-chess-king-alt fa-w-8 fa-7x size-14"><path fill="currentColor" d="M232 422.398V396c0-6.627-5.373-12-12-12h-15.892c-16.967-48.115-14.182-103.907-14.182-127.813V256H216c6.627 0 12-5.373 12-12v-8c0-6.627-5.373-12-12-12h-21.942l31.537-96.548C230.663 111.938 219.102 96 202.782 96h-48.983V68.766h19.792a5.98 5.98 0 0 0 5.98-5.98V40.363a5.98 5.98 0 0 0-5.98-5.98h-28.387V5.98a5.98 5.98 0 0 0-5.98-5.98H116.8a5.98 5.98 0 0 0-5.98 5.98v28.403H82.401a5.98 5.98 0 0 0-5.98 5.98v22.424a5.98 5.98 0 0 0 5.98 5.98h19.824V96H53.212c-16.321 0-27.882 15.939-22.813 31.453L61.941 224H40c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h26.074v.187c0 22.898 2.903 79.292-14.177 127.813H36c-6.627 0-12 5.373-12 12v26.398l-19.058 13.86A12.002 12.002 0 0 0 0 445.963V500c0 6.627 5.373 12 12 12h231.999c6.627 0 12-5.372 12-12l.001-54.037a12 12 0 0 0-4.942-9.705L232 422.398zM191.752 128l-31.357 96h-64.79l-31.363-96h127.51zM98.074 256.187V256h59.852v.187c0 26.289-2.342 78.07 12.525 127.813H85.544c15.022-50.385 12.53-102.298 12.53-127.813zM223.999 480H32v-23.853l24-17.454V416h144v22.693l24 17.454-.001 23.853z" class=""></path></svg></span>
            <p class="text-md text-gray-400 mb-4 mt-2 text-center w-full h-fit">--------- <span>Made By <a href="https://github.com/Ojaswi1234" class="text-indigo-600">@Ojaswi</a> ---------</span></p>
            <div class="w-full h-full flex flex-col  items-center justify-center gap-4 rounded-2xl">
                <a href="/" class="w-full h-fit text-center bg-indigo-900 flex flex-row justify-center items-center p-5 gap-2 rounded-r-2xl "><svg aria-hidden="true" data-prefix="fal" data-icon="chess-bishop-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512" class="svg-inline--fa fa-chess-bishop-alt fa-w-8 fa-7x size-8"><path fill="currentColor" d="M232 422.398V396c0-6.627-5.373-12-12-12h-15.661c-13.989-40.654-14.691-70.157-14.521-96.151H212c6.627 0 12-5.373 12-12v-8c0-6.627-5.373-12-12-12h-22.074v-19.365c35.913-18.606 33.767-61.034 33.767-61.979 0-48.037-37.011-114.353-71.39-135.018 8.902-2.024 15.553-9.972 15.553-19.487 0-11.046-8.954-20-20-20H108C96.954 0 88 8.954 88 20c0 9.549 6.697 17.521 15.646 19.511C69.104 60.309 32.29 126.773 32.29 174.505c0 .766-2.204 43.335 33.784 61.978v19.366H44c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h22.218c.225 24.802-.446 55.083-14.552 96.151H36c-6.627 0-12 5.373-12 12v26.398l-19.058 13.86A12.002 12.002 0 0 0 0 445.963V500c0 6.627 5.373 12 12 12h231.999c6.627 0 12-5.372 12-12l.001-54.037a12 12 0 0 0-4.942-9.705L232 422.398zM64.29 174.505C64.29 130.355 108.043 64 127.991 64c6.56 0 21.748 10.729 37.611 35.771l-44.673 44.673a6 6 0 0 0 0 8.485l14.142 14.142a6 6 0 0 0 8.485 0l37.477-37.477c6.73 16.331 10.659 32.391 10.659 44.911 0 33.2-21.208 35.517-33.767 39.052v42.292H98.074v-42.291c-12.402-3.493-33.784-5.761-33.784-39.053zM98.221 288h59.596c-.159 25.312.507 55.779 12.865 96H85.314c12.467-40.683 13.116-71.832 12.907-96zm125.778 192H32v-23.853l24-17.454V416h144v22.693l24 17.454-.001 23.853z" class=""></path></svg> New Game</a>
                <a href="/join" class="w-full h-fit text-center bg-indigo-900 flex flex-row justify-center items-center p-5 gap-3  rounded-r-2xl"><svg aria-hidden="true" data-prefix="fal" data-icon="chess-board" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-inline--fa fa-chess-board fa-w-16 fa-7x size-8"><path fill="currentColor" d="M0 0v512h512V0H0zm480 480H32V32h448v448zm-352-32H64v-64h64v64zm64-64h64v64h-64v-64zm128 0h64v64h-64v-64zm-128 0h-64v-64h64v64zm128-64v64h-64v-64h64zm64 64v-64h64v64h-64zM128 256v64H64v-64h64zm128 64h-64v-64h64v64zm64-64h64v64h-64v-64zm-128 0h-64v-64h64v64zm64 0v-64h64v64h-64zm128 0v-64h64v64h-64zM128 128v64H64v-64h64zm64 64v-64h64v64h-64zm128 0v-64h64v64h-64zm-128-64h-64V64h64v64zm128 0h-64V64h64v64zm128 0h-64V64h64v64z" class=""></path></svg>Join Game</a>
            
              
            </div>
             <a href="/chat" class="w-2/3 h-14 p-4 cursor-pointer flex flex-row  rounded-full text-black  justify-center items-center gap-5 bg-white justify-self-end hover:bg-gray-300"><span>Chat</span><svg aria-hidden="true" data-prefix="fal" data-icon="comments" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" class="svg-inline--fa fa-comments fa-w-18 fa-7x size-8  "><path fill="black" d="M532 386.2c27.5-27.1 44-61.1 44-98.2 0-80-76.5-146.1-176.2-157.9C368.4 72.5 294.3 32 208 32 93.1 32 0 103.6 0 192c0 37 16.5 71 44 98.2-15.3 30.7-37.3 54.5-37.7 54.9-6.3 6.7-8.1 16.5-4.4 25 3.6 8.5 12 14 21.2 14 53.5 0 96.7-20.2 125.2-38.8 9.1 2.1 18.4 3.7 28 4.8 31.5 57.5 105.5 98 191.8 98 20.8 0 40.8-2.4 59.8-6.8 28.5 18.5 71.6 38.8 125.2 38.8 9.2 0 17.5-5.5 21.2-14 3.6-8.5 1.9-18.3-4.4-25-.5-.4-22.6-24.2-37.9-54.9zM142.2 311l-11.4 7.4c-20.1 13.1-50.5 28.2-87.7 32.5 8.8-11.3 20.2-27.6 29.5-46.4L83 283.7l-16.5-16.3C50.7 251.9 32 226.2 32 192c0-70.6 79-128 176-128s176 57.4 176 128-79 128-176 128c-17.7 0-35.4-2-52.6-6l-13.2-3zm303 103.4l-11.4-7.4-13.2 3.1c-17.2 4-34.9 6-52.6 6-65.1 0-122-25.9-152.4-64.3C326.9 348.6 416 278.4 416 192c0-9.5-1.3-18.7-3.3-27.7C488.1 178.8 544 228.7 544 288c0 34.2-18.7 59.9-34.5 75.4L493 379.7l10.3 20.7c9.4 18.9 20.8 35.2 29.5 46.4-37.1-4.2-67.5-19.4-87.6-32.4zm-37.8-267.7c.1.2.1.4.2.6-.1-.2-.1-.4-.2-.6z" class=""></path></svg></a>
            <div class="w-full flex flex-row justify-between items-center mt-4 p-2">
                <a><img src="https://cdn-icons-png.flaticon.com/512/1055/1055646.png" alt="Player 1" class="w-12 h-12 md:w-14 md:h-14 rounded-full"></a>
                <a href="/profile" class="text-lg font-bold"><%= name %></a>
                <a href="/logout"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" class="size-8"><path fill="white" d="M534.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L434.7 224 224 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l210.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128zM192 96c17.7 0 32-14.3 32-32s-14.3-32-32-32l-64 0c-53 0-96 43-96 96l0 256c0 53 43 96 96 96l64 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-64 0c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l64 0z"/></svg></a>
            </div>
        </aside>
        <div class="flex flex-col items-center justify-center w-full lg:ml-96 relative z-10 mt-8 lg:mt-0">
            <div class="absolute responsive-bg left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 p-0 md:p-80 bg-indigo-900/60 rounded-2xl shadow-lg z-0 w-full h-full max-w-[500px] max-h-[500px]"></div>
            <span class="text-xl md:text-2xl text-white font-bold mb-2 md:mb-4 z-10">Player 2</span>
            <div class="board w-[95vw] max-w-[500px] h-[95vw] max-h-[500px] md:w-[500px] md:h-[500px] z-30 backdrop-filter backdrop-blur-[10px]"></div>
            <span class="text-xl md:text-2xl font-bold text-white mt-2 md:mt-4 z-10">Player 1</span>
        </div>
    </main>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js" integrity="sha384-mkQ3/7FUtcGyoppY6bz/PORYoGqOl7/aSUMn2ymDOJcapfS6PHqxhRTMh1RR0Q6+" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.3/chess.min.js" integrity="sha512-xRllwz2gdZciIB+AkEbeq+gVhX8VB8XsfqeFbUh+SzHlN96dEduwtTuVuc2u9EROlmW9+yhRlxjif66ORpsgVA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        const socket = io();
        const chess = new Chess();
        const boardElement = document.querySelector('.board');

        let draggedPiece = null;
        let sourceSquare = null;
        let playerRole = null;

        const renderBoard = () => {
            const board = chess.board();
            boardElement.innerHTML = '';
            board.forEach((row, rowIndex) => {
                row.forEach((square, squareIndex) => {
                    const squareList = document.createElement('div');
                    squareList.classList.add('square', (rowIndex + squareIndex) % 2 === 0 ? 'light' : 'dark');
                    squareList.dataset.row = rowIndex;
                    squareList.dataset.col = squareIndex;

                    if (square) {
                        const pieceElement = document.createElement('div');
                        pieceElement.classList.add('piece', square.color === 'w' ? 'white' : 'black');
                        pieceElement.innerHTML = getPieceUnicode(square);
                        pieceElement.draggable = playerRole === square.color;

                        pieceElement.addEventListener('dragstart', (e) => {
                            if (pieceElement.draggable) {
                                draggedPiece = pieceElement;
                                sourceSquare = { row: rowIndex, col: squareIndex };
                                e.dataTransfer.setData('text/plain', '');
                            }
                        });

                        pieceElement.addEventListener('dragend', () => {
                            draggedPiece = null;
                            sourceSquare = null;
                        });

                        squareList.appendChild(pieceElement);
                    }

                    squareList.addEventListener('dragover', (e) => {
                        e.preventDefault();
                    });

                    squareList.addEventListener('drop', (e) => {
                        e.preventDefault();
                        if (draggedPiece) {
                            const targetSquare = {
                                row: parseInt(squareList.dataset.row),
                                col: parseInt(squareList.dataset.col)
                            };
                            handleMove(sourceSquare, targetSquare);
                        }
                    });

                    boardElement.appendChild(squareList);
                });
            });
        };

        const handleMove = (source, target) => {
            const move = {
                from: `${String.fromCharCode(97 + source.col)}${8 - source.row}`,
                to: `${String.fromCharCode(97 + target.col)}${8 - target.row}`,
                promotion: 'q'
            };
            socket.emit('move', move);
        };

        const getPieceUnicode = (piece) => {
            const unicodePieces = {
                'p': '♟', 'r': '♜', 'n': '♞', 'b': '♝', 'q': '♛', 'k': '♚',
                'P': '♙', 'R': '♖', 'N': '♘', 'B': '♗', 'Q': '♕', 'K': '♔'
            };
            return unicodePieces[piece.type] || '';
        };

        socket.on('playerRole', (role) => {
            playerRole = role;
            renderBoard();
        });

        socket.on('spectator', () => {
            playerRole = null;
            renderBoard();
        });

        socket.on('boardState', (fen) => {
            chess.load(fen);
            renderBoard();
        });

        socket.on('move', (move) => {
            chess.move(move);
            renderBoard();
        });

        socket.on('invalidMove', (move) => {
            console.log('Invalid move:', move);
            alert('Invalid move! Please try again.');
        });

        renderBoard();
    </script>
</body>
</html>